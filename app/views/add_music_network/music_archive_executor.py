from aiogram import Router, F
from aiogram.types import CallbackQuery, Message
from aiogram.filters import StateFilter

from functions import get_dict_executors_music_archive
from config import settings
from keyboards.inline import get_button_by_genre_executors_music_archive


router = Router(name=__name__)


@router.message(StateFilter(None), F.text == "üíª –°–ø–∏—Å–æ–∫ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π –º—É–∑—ã–∫–∞–ª—å–Ω–æ–≥–æ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞ üíª")
async def executors_music_archive_handler(message: Message):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–ø–∏—Å–æ–∫ –∂–∞–Ω—Ä–æ–≤ –∏–∑ –º—É–∑—ã–∫–∞–ª—å–Ω–æ–≥–æ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞."""
    executors = get_dict_executors_music_archive(
        path=settings.UPLOAD_PATH_MUSIC_ACRHIVE,
    )
    if executors:
        await message.answer(
            text="–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π –∂–∞–Ω—Ä",
            reply_markup=get_button_by_genre_executors_music_archive(data=executors),
        )
    else:
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ—Å—Ç—É–ø–µ –∫ –º—É–∑—ã–∫–∞–ª—å–Ω–æ–º—É —Ö—Ä–∞–Ω–∏–ª–∏—â—É")


@router.callback_query(F.data.startswith("genreMA_"))
async def get_executors_by_genre_music_archive(call: CallbackQuery):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤—Å–µ—Ö –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π –ø–æ —É–∫–∞–Ω–∞–∑–æ–º—É –∂–∞–Ω—Ä—É
    –∏–∑ –º—É–∑—ã–∫–∞–ª—å–Ω–æ–≥–æ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞.
    """

    _, genre = call.data.split("_")
    executors = get_dict_executors_music_archive(
        path=settings.UPLOAD_PATH_MUSIC_ACRHIVE,
    )

    data = executors.get(genre)
    data.sort()
    for digit in range(0, len(data), 150):
        await call.message.answer("\n".join(data[digit : digit + 150]))
